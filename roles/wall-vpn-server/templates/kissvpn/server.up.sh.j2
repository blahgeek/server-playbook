#!/bin/bash -ex

DEVICE="$1"

{% set local_v4 = '192.168.0.0/16' | ansible.utils.ipsubnet(24, vpn_subnet_id) | ansible.utils.nthhost(101) %}
{% set peer_v4 = '192.168.0.0/16' | ansible.utils.ipsubnet(24, vpn_subnet_id) | ansible.utils.nthhost(102) %}

ip addr add dev "$DEVICE" {{ local_v4 }}/32 peer {{ peer_v4 }}

# # override openvpn routes
# ip route add 192.168.0.0/17 dev "$DEVICE" via {{ peer_v4 }}
# ip route add 192.168.128.0/17 dev "$DEVICE" via {{ peer_v4 }}


{% set local_v6 = ipv6_prefix | ansible.utils.ipsubnet(64, ipv6_vpn_subnet_id) | ansible.utils.nthhost(4096) %}
{% set peer_v6 = ipv6_prefix | ansible.utils.ipsubnet(64, ipv6_vpn_subnet_id) | ansible.utils.nthhost(4097) %}

ip -6 addr add dev "$DEVICE" {{ local_v6 }}/124 peer {{ peer_v6 }}

# eastwatch already have this in tunnelbroker
# # override openvpn routes
# ip -6 route add {{ yikai_net.home_prefix | ansible.utils.ipsubnet(49, 0) }} dev "$DEVICE" via {{ peer_v6 }}
# ip -6 route add {{ yikai_net.home_prefix | ansible.utils.ipsubnet(49, 1) }} dev "$DEVICE" via {{ peer_v6 }}
