#!/bin/bash -ex

DEVICE="$1"

{% set vpn_subnet_id = hostvars[item.host].vpn_subnet_id %}
{% set local_v4 = '192.168.0.0/16' | ansible.utils.ipsubnet(24, vpn_subnet_id) | ansible.utils.nthhost(102) %}
{% set peer_v4 = '192.168.0.0/16' | ansible.utils.ipsubnet(24, vpn_subnet_id) | ansible.utils.nthhost(101) %}

ip addr add dev "$DEVICE" {{ local_v4 }}/32 peer {{ peer_v4 }}

{% if item.kissvpn.route_v4 is defined %}
ip route flush table {{ item.kissvpn.route_v4.table }} || true
ip route add table {{ item.kissvpn.route_v4.table }} default via {{ peer_v4 }}

while ip rule del table {{ item.kissvpn.route_v4.table }} 2>/dev/null; do true; done

ip rule add fwmark {{ item.kissvpn.route_v4.fwmark }} table {{ item.kissvpn.route_v4.table }}
{% endif %}


{% set ipv6_prefix = hostvars[item.host].ipv6_prefix %}
{% set local_v6 = ipv6_prefix | ansible.utils.ipsubnet(64, ipv6_vpn_subnet_id) | ansible.utils.nthhost(4097) %}
{% set peer_v6 = ipv6_prefix | ansible.utils.ipsubnet(64, ipv6_vpn_subnet_id) | ansible.utils.nthhost(4096) %}

ip -6 addr add dev "$DEVICE" {{ local_v6 }}/124 peer {{ peer_v6 }}

{% if item.kissvpn.route_v6 is defined%}
{% if item.kissvpn.route_v6.default is defined and item.kissvpn.route_v6.default %}

ip -6 route add 2000::/3 dev "$DEVICE" via {{ peer_v6 }}

{% elif item.kissvpn.route_v6.table is defined %}
ip -6 route flush table {{ item.kissvpn.route_v6.table }} || true
ip -6 route add table {{ item.kissvpn.route_v6.table }} 2000::/3 via {{ peer_v6 }} dev "$DEVICE"

while ip -6 rule del table {{ item.kissvpn.route_v6.table }} 2>/dev/null; do true; done

ip -6 rule add fwmark {{ item.kissvpn.route_v6.fwmark }} table {{ item.kissvpn.route_v6.table }}
{% endif %}

{% if item.kissvpn.route_v6.uids is defined %}
{% for uid in item.kissvpn.route_v6.uids %}
if id {{ uid }}; then
  ip -6 rule add to 2000::/3 uidrange $(id -u {{ uid }})-$(id -u {{ uid }}) table {{ item.kissvpn.route_v6.table }}
fi
{% endfor %}
{% endif %}

{% endif %}
