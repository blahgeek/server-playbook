general:
  # Debug mode, only for development
  debug: false
  # displayed name
  instance_name: "Search.z1k.dev"
  # For example: https://example.com/privacy
  privacypolicy_url: false
  # use true to use your own donation page written in searx/info/en/donate.md
  # use false to disable the donation link
  donation_url: false
  # mailto:contact@example.com
  contact_url: false
  # record stats
  enable_metrics: false

brand:
  new_issue_url: https://github.com/searxng/searxng/issues/new
  docs_url: https://docs.searxng.org/
  public_instances: https://searx.space
  wiki_url: https://github.com/searxng/searxng/wiki
  issue_url: https://github.com/searxng/searxng/issues

search:
  # Filter results. 0: None, 1: Moderate, 2: Strict
  safe_search: 0
  # Existing autocomplete backends: "dbpedia", "duckduckgo", "google",
  # "seznam", "startpage", "swisscows", "qwant", "wikipedia" - leave blank to turn it off
  # by default.
  autocomplete: ""
  # minimun characters to type before autocompleter starts
  autocomplete_min: 4
  # Default search language - leave blank to detect from browser information or
  # use codes from 'languages.py'
  default_lang: "en-US"
  # Available languages
  # languages:
  #   - all
  #   - en
  #   - en-US
  #   - de
  #   - it-IT
  #   - fr
  #   - fr-BE
  # ban time in seconds after engine errors
  ban_time_on_fail: 5
  # max ban time in seconds after engine errors
  max_ban_time_on_fail: 120
  # remove format to deny access, use lower case.
  # formats: [html, csv, json, rss]
  formats:
    - html

server:
  # If you change port, bind_address or base_url don't forget to rebuild
  # instance's enviroment (make buildenv)
  port: 8888
  bind_address: "127.0.0.1"
  base_url: /  # Possible values: false or "https://example.org/location".
  limiter: false  # rate limit the number of request on the instance, block some bots

  # If your instance owns a /etc/searxng/settings.yml file, then set the following
  # values there.

  secret_key: "{{ searxng.secret_key }}"
  # Proxying image results through searx
  image_proxy: false
  # 1.0 and 1.1 are supported
  http_protocol_version: "1.1"
  # POST queries are more secure as they don't show up in history but may cause
  # problems when using Firefox containers
  method: "POST"
  default_http_headers:
    X-Content-Type-Options: nosniff
    X-XSS-Protection: 1; mode=block
    X-Download-Options: noopen
    X-Robots-Tag: noindex, nofollow
    Referrer-Policy: no-referrer

redis:
  # https://redis-py.readthedocs.io/en/stable/connections.html#redis.client.Redis.from_url
  url: unix:///usr/local/searxng-redis/run/redis.sock?db=0

ui:
  # Custom static path - leave it blank if you didn't change
  static_path: ""
  static_use_hash: false
  # Custom templates path - leave it blank if you didn't change
  templates_path: ""
  # query_in_title: When true, the result page's titles contains the query
  # it decreases the privacy, since the browser can records the page titles.
  query_in_title: true
  # infinite_scroll: When true, automatically loads the next page when scrolling to bottom of the current page.
  infinite_scroll: false
  # ui theme
  default_theme: simple
  # center the results ?
  center_alignment: false
  # Default interface locale - leave blank to detect from browser information or
  # use codes from the 'locales' config section
  default_locale: "en"
  # Open result links in a new tab by default
  # results_on_new_tab: false
  theme_args:
    # style of simple theme: auto, light, dark
    simple_style: auto

# Lock arbitrary settings on the preferences page.  To find the ID of the user
# setting you want to lock, check the ID of the form on the page "preferences".
#
# preferences:
#   lock:
#     - language
#     - autocomplete
#     - method
#     - query_in_title

# searx supports result proxification using an external service:
# https://github.com/asciimoo/morty uncomment below section if you have running
# morty proxy the key is base64 encoded (keep the !!binary notation)
# Note: since commit af77ec3, morty accepts a base64 encoded key.
#
# result_proxy:
#   url: http://127.0.0.1:3000/
#   key: !!binary "your_morty_proxy_key"
#   # [true|false] enable the "proxy" button next to each result
#   proxify_results: true

# communication with search engines
#
outgoing:
  # default timeout in seconds, can be override by engine
  request_timeout: 3.0
  # the maximum timeout in seconds
  # max_request_timeout: 10.0
  # suffix of searx_useragent, could contain informations like an email address
  # to the administrator
  useragent_suffix: ""
  # The maximum number of concurrent connections that may be established.
  pool_connections: 100
  # Allow the connection pool to maintain keep-alive connections below this
  # point.
  pool_maxsize: 20
  # See https://www.python-httpx.org/http2/
  enable_http2: true
  keepalive_expiry: 60
  # uncomment below section if you want to use a proxyq see: SOCKS proxies
  #   https://2.python-requests.org/en/latest/user/advanced/#proxies
  # are also supported: see
  #   https://2.python-requests.org/en/latest/user/advanced/#socks
  #
  #  proxies:
  #    all://:
  #      - http://proxy1:8080
  #      - http://proxy2:8080
  #
  #  using_tor_proxy: true
  #
  # Extra seconds to add in order to account for the time taken by the proxy
  #
  #  extra_proxy_timeout: 10.0
  #
  # uncomment below section only if you have more than one network interface
  # which can be the source of outgoing search requests
  #
  #  source_ips:
  #    - 1.1.1.1
  #    - 1.1.1.2
  #    - fe80::/126

# External plugin configuration, for more details see
#   https://docs.searxng.org/dev/plugins.html
#
# plugins:
#   - plugin1
#   - plugin2
#   - ...

# Comment or un-comment plugin to activate / deactivate by default.
#
enabled_plugins:
  - 'Hash plugin'
  - 'Search on category select'
  - 'Self Informations'
  - 'Tracker URL remover'
  - 'Hostname replace'  # see hostname_replace configuration below
  # - 'Open Access DOI rewrite'
  # - 'Vim-like hotkeys'
  # - 'Tor check plugin'

# Configuration of the "Hostname replace" plugin:
#
hostname_replace:
  '(.*\.)?geeksforgeeks\.org$': false

# hostname_replace:
#   '(.*\.)?youtube\.com$': 'invidious.example.com'
#   '(.*\.)?youtu\.be$': 'invidious.example.com'
#   '(.*\.)?youtube-noocookie\.com$': 'yotter.example.com'
#   '(.*\.)?reddit\.com$': 'teddit.example.com'
#   '(.*\.)?redd\.it$': 'teddit.example.com'
#   '(www\.)?twitter\.com$': 'nitter.example.com'
#   # to remove matching host names from result list, set value to false
#   'spam\.example\.com': false

checker:
  # disable checker when in debug mode
  off_when_debug: true

  # use "scheduling: false" to disable scheduling
  # scheduling: interval or int

  # to activate the scheduler:
  # * uncomment "scheduling" section
  # * add "cache2 = name=searxngcache,items=2000,blocks=2000,blocksize=4096,bitmap=1"
  #   to your uwsgi.ini

  # scheduling:
  #   start_after: [300, 1800]  # delay to start the first run of the checker
  #   every: [86400, 90000]     # how often the checker runs

  # additional tests: only for the YAML anchors (see the engines section)
  #
  additional_tests:
    rosebud: &test_rosebud
      matrix:
        query: rosebud
        lang: en
      result_container:
        - not_empty
        - ['one_title_contains', 'citizen kane']
      test:
        - unique_results

    android: &test_android
      matrix:
        query: ['android']
        lang: ['en', 'de', 'fr', 'zh-CN']
      result_container:
        - not_empty
        - ['one_title_contains', 'google']
      test:
        - unique_results

  # tests: only for the YAML anchors (see the engines section)
  tests:
    infobox: &tests_infobox
      infobox:
        matrix:
          query: ["linux", "new york", "bbc"]
        result_container:
          - has_infobox

categories_as_tabs:
  general:
  history:
  # images:
  # videos:
  # news:
  # map:
  # music:
  it:
  repos:
  packages:
  science:
  # files:
  # social media:

engines:

  - name: arch linux wiki
    engine: archlinux
    shortcut: archwiki
    categories: it

  - name: arxiv
    engine: arxiv
    shortcut: arx
    categories: science
    timeout: 4.0

  - name: wikipedia
    engine: wikipedia
    shortcut: wiki
    base_url: 'https://{language}.wikipedia.org/'

  - name: bitbucket
    engine: xpath
    paging: true
    search_url: https://bitbucket.org/repo/all/{pageno}?name={query}
    url_xpath: //article[@class="repo-summary"]//a[@class="repo-link"]/@href
    title_xpath: //article[@class="repo-summary"]//a[@class="repo-link"]
    content_xpath: //article[@class="repo-summary"]/p
    categories: repos
    timeout: 4.0
    shortcut: bb
    about:
      website: https://bitbucket.org/
      wikidata_id: Q2493781
      official_api_documentation: https://developer.atlassian.com/bitbucket
      use_official_api: false
      require_api_key: false
      results: HTML

  - name: currency
    engine: currency_convert
    categories: general
    shortcut: cc

  - name: docker hub
    engine: docker_hub
    shortcut: dh
    categories: packages

  - name: duckduckgo
    engine: duckduckgo
    shortcut: ddg

  - name: gitlab
    engine: json_engine
    paging: true
    search_url: https://gitlab.com/api/v4/projects?search={query}&page={pageno}
    url_query: web_url
    title_query: name_with_namespace
    content_query: description
    page_size: 20
    categories: repos
    shortcut: gl
    timeout: 10.0
    about:
      website: https://about.gitlab.com/
      wikidata_id: Q16639197
      official_api_documentation: https://docs.gitlab.com/ee/api/
      use_official_api: false
      require_api_key: false
      results: JSON

  - name: github
    engine: github
    shortcut: gh
    categories: [it, repos]

    # This a Gitea service. If you would like to use a different instance,
    # change codeberg.org to URL of the desired Gitea host. Or you can create a
    # new engine by copying this and changing the name, shortcut and search_url.

  - name: google
    engine: google
    shortcut: go
    # see https://docs.searxng.org/src/searx.engines.google.html#module-searx.engines.google
    use_mobile_ui: false
    # additional_tests:
    #   android: *test_android
    # https://github.com/searxng/searxng/pull/1633/files
    results_xpath: '//div[contains(@class, "kvH3mc")]'

  - name: google scholar
    engine: google_scholar
    shortcut: gos

  - name: npm
    engine: json_engine
    paging: true
    first_page_num: 0
    search_url: https://api.npms.io/v2/search?q={query}&size=25&from={pageno}
    results_query: results
    url_query: package/links/npm
    title_query: package/name
    content_query: package/description
    page_size: 25
    categories: packages
    timeout: 5.0
    shortcut: npm
    about:
      website: https://npms.io/
      wikidata_id: Q7067518
      official_api_documentation: https://api-docs.npms.io/
      use_official_api: false
      require_api_key: false
      results: JSON

  - name: pypi
    shortcut: pypi
    engine: xpath
    paging: true
    search_url: https://pypi.org/search?q={query}&page={pageno}
    results_xpath: /html/body/main/div/div/div/form/div/ul/li/a[@class="package-snippet"]
    url_xpath: ./@href
    title_xpath: ./h3/span[@class="package-snippet__name"]
    content_xpath: ./p
    suggestion_xpath: /html/body/main/div/div/div/form/div/div[@class="callout-block"]/p/span/a[@class="link"]
    first_page_num: 1
    categories: packages
    about:
      website: https://pypi.org
      wikidata_id: Q2984686
      official_api_documentation: https://warehouse.readthedocs.io/api-reference/index.html
      use_official_api: false
      require_api_key: false
      results: HTML

  - name: reddit
    engine: reddit
    shortcut: re
    page_size: 25

  - name: stackoverflow
    engine: stackexchange
    shortcut: st
    api_site: 'stackoverflow'
    categories: [it, q&a]

  - name: askubuntu
    engine: stackexchange
    shortcut: ubuntu
    api_site: 'askubuntu'
    categories: [it, q&a]

  - name: superuser
    engine: stackexchange
    shortcut: su
    api_site: 'superuser'
    categories: [it, q&a]

  - name: yacy
    engine: yacy
    shortcut: history
    categories: history
    base_url: http://192.168.100.100:8090
    # required if you aren't using HTTPS for your local yacy instance'
    enable_http: true
    number_of_results: 20
    timeout: 3.0
    tokens:
      - "{{ searxng.private_engine_token }}"

doi_resolvers:
  oadoi.org: 'https://oadoi.org/'
  doi.org: 'https://doi.org/'
  doai.io: 'https://dissem.in/'
  sci-hub.se: 'https://sci-hub.se/'
  sci-hub.do: 'https://sci-hub.do/'
  scihubtw.tw: 'https://scihubtw.tw/'
  sci-hub.st: 'https://sci-hub.st/'
  sci-hub.bar: 'https://sci-hub.bar/'
  sci-hub.it.nf: 'https://sci-hub.it.nf/'

default_doi_resolver: 'oadoi.org'
