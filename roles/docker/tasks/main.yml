- name: Install python pip
  package:
    name:
      - python3-pip
    state: present

- name: Install docker sdk for python
  pip:
    name:
      - docker
      - docker-compose

- name: Ensure docker.service.d folder exists
  file:
    path: /etc/systemd/system/docker.service.d
    state: directory

- name: Install docker netns config
  template:
    src: docker.service.d/netns.conf.j2
    dest: /etc/systemd/system/docker.service.d/netns.conf
  notify: Reload docker

- name: Flush reload docker handlers
  meta: flush_handlers

- name: Configure network with ipv6 for docker
  docker_network:
    name: v6net
    enable_ipv6: yes
    ipam_config:
      - subnet: "{{ ipv6_prefix | ansible.netcommon.ipsubnet(64, ipv6_docker_subnet_id) }}"

- name: Configure iptables masquerade for docker
  iptables_raw:
    name: docker_masquerade
    table: nat
    rules: "-A POSTROUTING -s 10.255.0.0/24 ! -o lo -j MASQUERADE"

- name: Create directories for docker service
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - /var/nginx-proxy/certs
    - /var/nginx-proxy/vhost.d
    - /var/nginx-proxy/html
    - /var/nginx-proxy/acme

- name: Container nginx-proxy
  docker_container:
    container_default_behavior: no_defaults
    restart_policy: unless-stopped
    name: nginx-proxy
    image: nginxproxy/nginx-proxy:0.9.3
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /var/nginx-proxy/certs:/etc/nginx/certs
      - /var/nginx-proxy/vhost.d:/etc/nginx/vhost.d
      - /var/nginx-proxy/html:/usr/share/nginx/html
    env:
      ENABLE_IPV6: "true"
    networks:
      # "bridge" is the default network
      # it must exists and comes first so that this container can access others
      - name: bridge
      - name: v6net
        ipv6_address: "{{ ipv6_prefix | ansible.netcommon.ipsubnet(64, ipv6_docker_subnet_id) | ansible.netcommon.nthhost(0x6666) }}"

- import_tasks: docker-forward.yml
  vars:
    ports:
      - 80
      - 443

- name: Container acme-companion
  docker_container:
    container_default_behavior: no_defaults
    restart_policy: unless-stopped
    name: acme-companion
    image: nginxproxy/acme-companion:2.1.0
    volumes_from:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/nginx-proxy/acme:/etc/acme.sh

- name: Container whoami for http test
  docker_container:
    container_default_behavior: no_defaults
    restart_policy: unless-stopped
    name: http-test-whoami
    image: jwilder/whoami
    env:
      VIRTUAL_HOST: "whoami.{{ inventory_hostname }}"
      LETSENCRYPT_HOST: "whoami.{{ inventory_hostname }}"
      VIRTUAL_PORT: "8000"
    expose: 8000
